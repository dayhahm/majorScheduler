#BlueJ class context
comment0.target=Course
comment0.text=\n\ Representation\ of\ a\ course\ at\ Wellesley,\ describing\ the\ course's\ content,\ its\ prerequisites,\ and\ \n\ whether\ or\ not\ the\ course\ can\ be\ skipped.\n\n\ @author\ Debbie\n\ @version\ 1.0\n
comment1.params=name\ desc
comment1.target=Course(java.lang.String,\ java.lang.String)
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ Course.\ Takes\ two\ parameters.\ Assumes\ that\ this\ course\n\ cannot\ be\ skipped\n\ \n\ @param\ \ \ name\ \ \ \ name\ of\ the\ course\n\ @param\ \ \ desc\ \ \ \ description\ of\ the\ course\n
comment10.params=skip
comment10.target=void\ setReq(boolean)
comment10.text=\n\ Setter\ for\ canBeSkipped\n\ \n\ @param\ \ \ skip\ \ \ if\ you\ can\ skip\ a\ course\ or\ not\n
comment11.params=c1
comment11.target=boolean\ equals(java.lang.Object)
comment11.text=\n\ Determins\ if\ the\ course\ is\ equal\ to\ another\ course,\ c1.\ If\ the\ names\ of\ the\ courses\n\ are\ the\ same,\ the\ courses\ are\ considered\ equal.\n\ \n\ @param\ \ \ c1\ \ \ course\ you\ are\ comparing\ the\ current\ course\ to\n\ @return\ \ \ \ \ \ \ true,\ if\ the\ name\ of\ the\ two\ are\ the\ same,\ false\ otherwise\n
comment12.params=
comment12.target=java.lang.String\ toString()
comment12.text=\n\ Returns\ a\ string\ representation\ of\ the\ Course\ class\n\ \n\ @return\ \ \ \ \ \ formated\ string\ representation\n
comment2.params=name\ desc\ skip
comment2.target=Course(java.lang.String,\ java.lang.String,\ boolean)
comment2.text=\n\ Constructor\ for\ objects\ of\ class\ Course.\ Takes\ three\ parameters.\n\ \n\ @param\ \ \ name\ \ \ \ name\ of\ the\ course\n\ @param\ \ \ desc\ \ \ \ description\ of\ the\ course\n\ @param\ \ \ skip\ \ \ \ if\ the\ course\ can\ be\ skipped\ or\ not\n
comment3.params=
comment3.target=java.lang.String\ getCourseName()
comment3.text=\n\ Getter\ for\ courseName\n\ \n\ @return\ \ \ \ course\ name\n
comment4.params=newName
comment4.target=void\ setCourseName(java.lang.String)
comment4.text=\n\ Setter\ for\ courseName\n\ \n\ @param\ \ \ newName\ \ \ new\ course\ number\n
comment5.params=
comment5.target=java.lang.String\ getDescription()
comment5.text=\n\ Getter\ for\ description\n\ \n\ @return\ \ \ \ description\n
comment6.params=newDescription
comment6.target=void\ setDescription(java.lang.String)
comment6.text=\n\ Setter\ for\ description\n\ \n\ @param\ \ \ newDescription\ \ \ new\ course\ description\n
comment7.params=
comment7.target=java.lang.String\ getReq()
comment7.text=\n\ Getter\ for\ req\n\ \n\ @return\ \ \ \ requirement,\ or\ if\ no\ requirement\ an\ empty\ string\n
comment8.params=newReq
comment8.target=void\ setReq(java.lang.String)
comment8.text=\n\ Setter\ for\ req\n\ \n\ @param\ \ \ newReq\ \ \ requirement\ for\ course\n
comment9.params=
comment9.target=java.lang.Boolean\ getCanBeSkipped()
comment9.text=\n\ Getter\ for\ canBeSkipped\n\ \n\ @return\ \ \ \ if\ you\ can\ skip\ this\ course\n
numComments=13
